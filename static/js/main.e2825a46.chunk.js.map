{"version":3,"sources":["components/profile/styledProfile.js","components/profile/Profile.js","components/statistics/statisticsItem/styledStatisticsItem.js","components/statistics/statisticsItem/StatisticsItem.js","components/statistics/styledStatistics.js","components/statistics/Statistics.js","components/friendList/styledFriendList.js","components/friendList/friendListItem/styledFriendListItem.js","components/friendList/friendListItem/FriendListItem.js","components/friendList/FriendList.js","components/transactionHistory/styledTransactionHistory.js","components/transactionHistory/TransactionHistory.js","data/data.js","App.js","index.js"],"names":["ProfileWrapper","styled","section","Profile","name","tag","location","avatar","stats","followers","views","likes","className","src","alt","defaultProps","LiItem","li","StatisticsItem","label","percentage","StatisticsWrapper","Statistics","title","map","stat","key","id","FriendListWrapper","FriendListItem","status","isOnline","width","FriendList","friends","friend","TransactionHistoryWrapper","TransactionHistory","items","item","type","amount","currency","data","profile","statistics","transactions","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2825a46.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nconst ProfileWrapper = styled.section`\r\npadding-top: 30px;\r\npadding-bottom: 15px;\r\ncolor: #6f6b6b;\r\ntext-align: center;\r\n.profile {\r\n    margin: 0 auto;\r\n    width: 300px;\r\n    overflow: hidden;\r\n    background-color: #fff;\r\n    border-radius: 5px;\r\n    border: 1px solid #6495ED;\r\n    box-shadow: 4px 4px 9px 7px rgba(34, 60, 80, 0.2);\r\n    transition: transform 250ms linear, box-shadow 250ms linear;\r\n&:hover {\r\n        transform: scale(1.1);\r\n        box-shadow: 4px 4px 15px 11px rgba(12, 105, 101, 0.27);\r\n    }\r\n}\r\n.description {\r\n    padding: 15px;\r\n}\r\n.avatar {\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    padding: 10px;\r\n    width: 250px;\r\n    margin-bottom: 15px;\r\n    border: 0.5px solid grey;\r\n    border-radius: 50%;\r\n}\r\n.name,\r\n.tag {\r\n    margin-bottom: 10px;\r\n}\r\n.name {\r\n    color: #212121;\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n}\r\n.stats {\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n.stats li {\r\n    padding: 15px 10px 20px;\r\n    width: calc(100% / 3);\r\n    background-color: \t#B0C4DE;\r\n    border-top: 1px solid #6495ED;\r\n&:hover {\r\n        color: #702bad;\r\n    }\r\n}\r\n.stats li:not(:last-child) {\r\n    border-right: 1px solid #6495ED;\r\n}\r\n.label {\r\n    display: block;\r\n    margin-bottom: 10px;\r\n}\r\n.quantity {\r\n    display: block;\r\n    color: #212121;\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n}\r\n`\r\nexport default ProfileWrapper","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ProfileWrapper from './styledProfile'\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n    const {followers, views, likes} = stats\r\n    return (\r\n        <ProfileWrapper>\r\n            <div className='profile'>\r\n                <div className='description'>\r\n                    <img src={avatar} alt='User Avatar' className='avatar'/>\r\n                    <p className='name'>{name}</p>\r\n                    <p className='tag'>@{tag}</p>\r\n                    <p className='location'>{location}</p>\r\n                </div>\r\n\r\n                <ul className='stats list'>\r\n                    <li>\r\n                        <span className='label'>Followers</span>\r\n                        <span className='quantity'>{followers}</span>\r\n                    </li>\r\n                    <li>\r\n                        <span className='label'>Views</span>\r\n                        <span className='quantity'>{views}</span>\r\n                    </li>\r\n                    <li>\r\n                        <span className='label'>Likes</span>\r\n                        <span className='quantity'>{likes}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </ProfileWrapper>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n\r\nProfile.defaultProps = {\r\n    avatar: 'https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg'\r\n}\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.objectOf(PropTypes.number),\r\n}","import styled from 'styled-components';\r\n\r\nconst LiItem = styled.li`\r\n  padding: 5px;\r\n  width: calc(100% / 5);\r\n  background-color: #B0E0E6;\r\n  transition: box-shadow 200ms linear;\r\n  &:hover {\r\n    box-shadow: 4px 4px 9px 7px rgba(34, 60, 80, 0.3);\r\n  }\r\n  .label,\r\n  .percentage {\r\n    display: block;\r\n    padding: 10px;\r\n  }\r\n  .label {\r\n    font-size: 14px;\r\n  }\r\n  .percentage {\r\n    font-weight: 700;\r\n    font-size: 18px;\r\n  }\r\n`;\r\nexport default LiItem;","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport LiItem from \"./styledStatisticsItem\";\r\n\r\nconst StatisticsItem = ({ label, percentage }) => {\r\n    return (\r\n        <LiItem className='item'>\r\n            <span className='label'>{label}</span>\r\n            <span className='percentage'>{percentage}%</span>\r\n        </LiItem>\r\n    )\r\n}\r\n\r\nexport default StatisticsItem\r\n\r\nStatisticsItem.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    percentage: PropTypes.number.isRequired,\r\n}","import styled from \"styled-components\";\r\n\r\nconst StatisticsWrapper = styled.section`\r\n  padding-top: 30px;\r\n  .statistics {\r\n    display: block;\r\n    width: 300px;\r\n    margin: 0 auto;\r\n    background-color: #ffffff;\r\n    border: 1px solid #B0E0E6;\r\n    border-radius: 5px;\r\n  }\r\n  .stat-list {\r\n    display: flex;\r\n  }\r\n  .title {\r\n    padding: 15px;\r\n    font-size: 20px;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\nexport default StatisticsWrapper;","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport StatisticsItem from './statisticsItem/StatisticsItem'\r\nimport StatisticsWrapper from './styledStatistics'\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n    return (\r\n        <StatisticsWrapper>\r\n            <div className='statistics'>\r\n                {title && <h2 className='title'>{title}</h2>}\r\n                <ul className='stat-list list'>\r\n                    {stats.map(stat => (\r\n                        <StatisticsItem {...stat} key={stat.id}/>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </StatisticsWrapper>\r\n    )\r\n}\r\n\r\nexport default Statistics\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(PropTypes.object)\r\n}","import styled from 'styled-components';\r\n\r\nconst FriendListWrapper = styled.section`\r\n  padding-top: 30px;\r\n  padding-bottom: 15px;\r\n  .friend-list {\r\n    margin: 0 auto;\r\n    width: 300px;\r\n  }\r\n  .item:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`\r\n\r\nexport default FriendListWrapper;","import styled from 'styled-components';\r\n\r\nconst LiItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px 15px;\r\n  color: #212121;\r\n  background-color: #F0F8FF;\r\n  border-radius: 4px;\r\n  box-shadow: 4px 4px 9px 7px rgba(34, 60, 80, 0.2);\r\n  transition: transform 200ms linear, box-shadow 200ms linear;\r\n  &:hover {\r\n    transform: scale(1.03);\r\n    box-shadow: 4px 3px 12px 6px rgba(19, 152, 134, 0.3);\r\n  }\r\n  .status {\r\n    margin-right: 10px;\r\n    display: inline-block;\r\n    width: 15px;\r\n    height: 15px;\r\n    border-radius: 50%;\r\n    &.online {\r\n      background-color: #4fcd4f;\r\n    }\r\n    &.offline {\r\n      background-color: #ec6262;\r\n    }\r\n  }\r\n  .avatar {\r\n    margin-right: 20px;\r\n    padding: 5px;\r\n    border: 1px solid grey;\r\n    border-radius: 50%;\r\n  }\r\n  .name {\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n  }\r\n`;\r\nexport default LiItem;","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport LiItem from './styledFriendListItem';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n    const status = isOnline ? 'status online' : 'status offline'\r\n\r\n    return (\r\n        <LiItem className='item'>\r\n            <span className={status}></span>\r\n            <img className='avatar' src={avatar} alt={name} width='48' />\r\n            <p className='name'>{name}</p>\r\n        </LiItem>\r\n    )\r\n}\r\n\r\nexport default FriendListItem\r\n\r\nFriendListItem.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n}","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport FriendListWrapper from './styledFriendList'\r\nimport FriendlistItem from \"./friendListItem/FriendListItem\";\r\n\r\nconst FriendList = ({ friends }) => {\r\n    return (\r\n       <FriendListWrapper>\r\n           <ul className='friend-list'>\r\n               {friends.map(friend => (<FriendlistItem {...friend} key={friend.id} />))}\r\n           </ul>\r\n       </FriendListWrapper>\r\n    )\r\n}\r\n\r\nexport default FriendList\r\n\r\nFriendList.propTypes = {\r\n    friend: PropTypes.arrayOf(PropTypes.object)\r\n}","import styled from 'styled-components';\r\n\r\nconst TransactionHistoryWrapper = styled.section`\r\n  padding: 30px 0;\r\n  .transaction-history {\r\n    margin: 0 auto;\r\n    border-collapse: collapse;\r\n    border-radius: 5px;\r\n    box-shadow: 4px 4px 19px 4px rgba(58, 42, 69, 0.2);\r\n    overflow: hidden;\r\n  }\r\n  .thead {\r\n    background-color: #4169E1;\r\n    color: #ffffff;\r\n  }\r\n  .thead th {\r\n    padding: 10px 15px;\r\n    width: 200px;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n  }\r\n  .thead th:not(:last-child) {\r\n    border-right: 1px solid #f2f7f8;\r\n  }\r\n  .tbody {\r\n    font-size: 14px;\r\n  }\r\n  .tbody tr {\r\n    color: #164a45;\r\n    background-color: #B0C4DE;\r\n    transition: background-color 50ms linear, color 50ms linear;\r\n    &:hover {\r\n      background-color: #00BFFF;\r\n      color: #ffffff;\r\n    }\r\n  }\r\n  .tbody tr:nth-child(2n) {\r\n    background-color: #f3f0f8;\r\n    transition: background-color 50ms linear, color 50ms linear;\r\n    &:hover {\r\n      background-color: #00BFFF;\r\n      color: #ffffff;\r\n    }\r\n  }\r\n  .tbody td {\r\n    padding: 10px 15px;\r\n    text-align: center;\r\n  }\r\n  .tbody td:not(:last-child) {\r\n    border-right: 1px solid #f2f7f8;\r\n  }\r\n`;\r\nexport default TransactionHistoryWrapper;","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport TransactionHistoryWrapper from \"./styledTransactionHistory\";\r\n\r\nconst TransactionHistory = ({items}) => {\r\n    return (\r\n        <TransactionHistoryWrapper>\r\n            <table className='transaction-history'>\r\n                <thead className='thead'>\r\n                <tr>\r\n                    <th>Type</th>\r\n                    <th>Amount</th>\r\n                    <th>Currency</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody className='tbody'>\r\n                {items.map(item => (\r\n                    <tr key={item.id}>\r\n                        <td>{item.type}</td>\r\n                        <td>{item.amount}</td>\r\n                        <td>{item.currency}</td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        </TransactionHistoryWrapper>\r\n    )\r\n}\r\n\r\nexport default TransactionHistory\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            type: PropTypes.string.isRequired,\r\n            amount: PropTypes.string.isRequired,\r\n            currency: PropTypes.string.isRequired,\r\n        })\r\n    )\r\n}","import profile from './dataProfile.json'\r\nimport statistics from './dataStatistics.json'\r\nimport friends from './dataFriends.json'\r\nimport transactions from './dataTransactions.json'\r\n\r\nconst data = { profile, statistics, friends, transactions }\r\n\r\nexport default data","import React from 'react';\n\nimport Profile from './components/profile/Profile'\nimport Statistics from \"./components/statistics/Statistics\";\nimport FriendList from \"./components/friendList/FriendList\";\nimport TransactionHistory from \"./components/transactionHistory/TransactionHistory\";\n\nimport data from \"./data/data\";\n\nconst App = () => {\n  return (\n    <>\n        <Profile {...data.profile}/>\n        <Statistics title='Upload stats' stats={data.statistics} />\n        <FriendList friends={data.friends} />\n        <TransactionHistory items={data.transactions} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}